<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classDHT11" xml:lang="es">
<title>Referencia de la clase DHT11</title>
<indexterm><primary>DHT11</primary></indexterm>
<para>
<computeroutput>#include &lt;DHT11.h&gt;</computeroutput>
</para>
Diagrama de colaboración de DHT11:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classDHT11__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Métodos públicos    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classDHT11_1ad52a70ab511e087aaad53848d64ee976">DHT11</link> (int pin)</para>
</listitem>
            <listitem><para>void <link linkend="_classDHT11_1a70a9b21081d65b2b418745366efd8d88">setDelay</link> (unsigned long delay)</para>
</listitem>
            <listitem><para>int <link linkend="_classDHT11_1ae869e047ca078c54d2601f0247fa2078">readHumidity</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_classDHT11_1a5891be6d1c971949e3fe3b8d7bc2a993">readTemperature</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_classDHT11_1a071ea5ad5f0df9275c2ed338645f6479">readTemperatureHumidity</link> (int &amp;temperature, int &amp;humidity)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Atributos públicos estáticos    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classDHT11_1ac3469742c2ff096ab9f82ed52cf9a167"/>static const int <emphasis role="strong">ERROR_CHECKSUM</emphasis> = 254</para>
</listitem>
            <listitem><para><anchor xml:id="_classDHT11_1a2930f27a4963c37ba54bb69f219a184f"/>static const int <emphasis role="strong">ERROR_TIMEOUT</emphasis> = 253</para>
</listitem>
            <listitem><para><anchor xml:id="_classDHT11_1a30807c6989447d49faa8a53940b84d16"/>static const int <emphasis role="strong">TIMEOUT_DURATION</emphasis> = 1000</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Amigas    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_classDHT11_1a73010b69762bc8832cebeabe6c10bed1">setPinDHT11</link> (<link linkend="_classDHT11">DHT11</link> &amp;sensor, int pin)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Descripción detallada</title>

<para><link linkend="_DHT11_8h_source">DHT11.h</link> Header file for the <link linkend="_classDHT11">DHT11</link> library, providing functionalities to interface with the <link linkend="_classDHT11">DHT11</link> temperature &amp; humidity sensor.</para>

<para>Author: Dhruba Saha Version: 2.1.0 License: MIT <link linkend="_classDHT11">DHT11</link> Class Provides methods to read temperature and humidity data from the <link linkend="_classDHT11">DHT11</link> sensor. </para>
</section>
<section>
<title>Documentación de constructores y destructores</title>
<anchor xml:id="_classDHT11_1ad52a70ab511e087aaad53848d64ee976"/><section>
    <title>DHT11()</title>
<indexterm><primary>DHT11</primary><secondary>DHT11</secondary></indexterm>
<indexterm><primary>DHT11</primary><secondary>DHT11</secondary></indexterm>
<para><computeroutput>DHT11::DHT11 (int pin)</computeroutput></para>
<para>Constructor Initializes the data pin to be used for communication with the <link linkend="_classDHT11">DHT11</link> sensor.</para>

<para>
                <formalpara>
                    <title>
Parámetros</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>pin</entry><entry>
<para>Digital pin number on the Arduino board to which the <link linkend="_classDHT11">DHT11</link> sensor is connected.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <link linkend="_DHT11_8cpp_source">DHT11.cpp</link> Library for reading temperature and humidity from the <link linkend="_classDHT11">DHT11</link> sensor.</para>

<para>Author: Dhruba Saha Version: 2.1.0 License: MIT Constructor for the <link linkend="_classDHT11">DHT11</link> class. Initializes the pin to be used for communication and sets it to output mode.</para>

<para>
                <formalpara>
                    <title>
Parámetros</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>pin</entry><entry>
<para>Digital pin number on the Arduino board to which the <link linkend="_classDHT11">DHT11</link> sensor is connected. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Documentación de funciones miembro</title>
<anchor xml:id="_classDHT11_1ae869e047ca078c54d2601f0247fa2078"/><section>
    <title>readHumidity()</title>
<indexterm><primary>readHumidity</primary><secondary>DHT11</secondary></indexterm>
<indexterm><primary>DHT11</primary><secondary>readHumidity</secondary></indexterm>
<para><computeroutput>int DHT11::readHumidity ( )</computeroutput></para>
<para>Reads and returns the humidity from the <link linkend="_classDHT11">DHT11</link> sensor.</para>

<para><formalpara><title>Devuelve</title>

<para>: Humidity value in percentage. Returns DHT11_ERROR_TIMEOUT if reading times out. Returns DHT11_ERROR_CHECKSUM if checksum validation fails.</para>
</formalpara>
Reads and returns the humidity from the <link linkend="_classDHT11">DHT11</link> sensor. Utilizes the readRawData method to retrieve raw data from the sensor and then extracts the humidity from the data array.</para>

<para><formalpara><title>Devuelve</title>

<para>: Humidity value in percentage. Returns DHT11::ERROR_TIMEOUT if reading times out, or DHT11::ERROR_CHECKSUM if checksum validation fails. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classDHT11_1a5891be6d1c971949e3fe3b8d7bc2a993"/><section>
    <title>readTemperature()</title>
<indexterm><primary>readTemperature</primary><secondary>DHT11</secondary></indexterm>
<indexterm><primary>DHT11</primary><secondary>readTemperature</secondary></indexterm>
<para><computeroutput>int DHT11::readTemperature ( )</computeroutput></para>
<para>Reads and returns the temperature from the <link linkend="_classDHT11">DHT11</link> sensor.</para>

<para><formalpara><title>Devuelve</title>

<para>: Temperature value in Celsius. Returns DHT11_ERROR_TIMEOUT if reading times out. Returns DHT11_ERROR_CHECKSUM if checksum validation fails.</para>
</formalpara>
Reads and returns the temperature from the <link linkend="_classDHT11">DHT11</link> sensor. Utilizes the readRawData method to retrieve raw data from the sensor and then extracts the temperature from the data array.</para>

<para><formalpara><title>Devuelve</title>

<para>: Temperature value in Celsius. Returns DHT11::ERROR_TIMEOUT if reading times out, or DHT11::ERROR_CHECKSUM if checksum validation fails. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classDHT11_1a071ea5ad5f0df9275c2ed338645f6479"/><section>
    <title>readTemperatureHumidity()</title>
<indexterm><primary>readTemperatureHumidity</primary><secondary>DHT11</secondary></indexterm>
<indexterm><primary>DHT11</primary><secondary>readTemperatureHumidity</secondary></indexterm>
<para><computeroutput>int DHT11::readTemperatureHumidity (int &amp; temperature, int &amp; humidity)</computeroutput></para>
<para>Reads and returns the temperature and humidity from the <link linkend="_classDHT11">DHT11</link> sensor.</para>

<para>
                <formalpara>
                    <title>
Parámetros</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>temperature</entry><entry>
<para>Reference to a variable where the temperature value will be stored. </para>
</entry>
                            </row>
                            <row>
<entry>humidity</entry><entry>
<para>Reference to a variable where the humidity value will be stored. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Devuelve</title>

<para>: true if the reading is successful, false if it fails due to timeout or checksum error.</para>
</formalpara>
Reads and returns the temperature and humidity from the <link linkend="_classDHT11">DHT11</link> sensor. Utilizes the readRawData method to retrieve raw data from the sensor and then extracts both temperature and humidity from the data array.</para>

<para>
                <formalpara>
                    <title>
Parámetros</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>temperature</entry><entry>
<para>Reference to a variable where the temperature value will be stored. </para>
</entry>
                            </row>
                            <row>
<entry>humidity</entry><entry>
<para>Reference to a variable where the humidity value will be stored. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Devuelve</title>

<para>: An integer representing the status of the read operation. Returns 0 if the reading is successful, DHT11::ERROR_TIMEOUT if a timeout occurs, or DHT11::ERROR_CHECKSUM if a checksum error occurs. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classDHT11_1a70a9b21081d65b2b418745366efd8d88"/><section>
    <title>setDelay()</title>
<indexterm><primary>setDelay</primary><secondary>DHT11</secondary></indexterm>
<indexterm><primary>DHT11</primary><secondary>setDelay</secondary></indexterm>
<para><computeroutput>void DHT11::setDelay (unsigned long delay)</computeroutput></para>
<para>Sets the delay between consecutive sensor readings. If this method is not called, a default delay of 500 milliseconds is used.</para>

<para>
                <formalpara>
                    <title>
Parámetros</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>delay</entry><entry>
<para>Delay duration in milliseconds between sensor readings. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Documentación de símbolos amigos y relacionados</title>
<anchor xml:id="_classDHT11_1a73010b69762bc8832cebeabe6c10bed1"/><section>
    <title>setPinDHT11</title>
<indexterm><primary>setPinDHT11</primary><secondary>DHT11</secondary></indexterm>
<indexterm><primary>DHT11</primary><secondary>setPinDHT11</secondary></indexterm>
<para><computeroutput>void setPinDHT11 (<link linkend="_classDHT11">DHT11</link> &amp; sensor, int pin)<computeroutput>[friend]</computeroutput></computeroutput></para>
<para>Bloque if-else Controla si el pin ingresado es uno físicamente válido. Imprime por puerto serie UART un mensaje de error en caso de no serlo.</para>

<para>pinMode(sensor._pin, INPUT) &quot;Desactiva&quot; el pin anterior.</para>

<para>sensor._pin = pin Actualiza el pin.</para>

<para>pinMode(pin, OUTPUT) y digitalWrite(pin, HIGH) Inicializa el nuevo pin como lo hace internamente la clase <link linkend="_classDHT11">DHT11</link></para>

<para>delay(250) Tiempo de espera a que el sensor se estabilice.</para>
</section>
<para>
La documentación de esta clase está generada de los siguientes archivos:</para>
main/libraries/DHT11-HW-481/DHT11.hmain/libraries/DHT11-HW-481/DHT11.cpp</section>
</section>
