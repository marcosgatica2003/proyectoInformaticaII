<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_accesoRFID_8cpp_source" xml:lang="es">
<title>accesoRFID.cpp</title>
<indexterm><primary>main/libraries/RFID-RC522/accesoRFID.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#include&#32;&quot;accesoRFID.h&quot;</emphasis>
2 
11 <link linkend="_classaccesoRFID_1a76ec44dbd93eed875350296b46670f11">accesoRFID::accesoRFID</link>&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;ssPin,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;rstPin,&#32;String&#32;ID):&#32;rdif(ssPin,&#32;rstPin),&#32;autorizarID(ID)&#32;{}
12 
13 
18 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classaccesoRFID_1a3bc744bb024b8bfbe459092a36f9cd68">accesoRFID::start</link>(){
19 &#32;&#32;SPI.begin();
20 &#32;&#32;rdif.<link linkend="_classMFRC522_1ad681e424fc68a57941bea5702cee05eb">PCD_Init</link>();
21 }
22 
28 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classaccesoRFID_1abadde807c97ccaa1a49182292d43d8e1">accesoRFID::autorizar</link>()&#32;{
29 &#32;&#32;&#32;&#32;String&#32;content&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
30 
31 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!rdif.<link linkend="_classMFRC522_1a3adca9d3b455c680ebcde3b74c4e567b">PICC_IsNewCardPresent</link>())&#32;{
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
33 &#32;&#32;&#32;&#32;}
34 
35 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!rdif.<link linkend="_classMFRC522_1aab1218c71cec9cc17ee3ac8a683df106">PICC_ReadCardSerial</link>())&#32;{
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
37 &#32;&#32;&#32;&#32;}
38 
39 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;rdif.uid.size;&#32;++i)&#32;{
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;content.concat(String(rdif.uid.uidByte[i]&#32;&lt;&#32;0x10&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;0&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>));
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;content.concat(String(rdif.uid.uidByte[i],&#32;HEX));
42 &#32;&#32;&#32;&#32;}
43 
44 &#32;&#32;&#32;&#32;content.toUpperCase();
45 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;content.substring(1)&#32;==&#32;autorizarID;
46 }
47 
54 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classaccesoRFID_1a0274f257c332f825bdb079d4b4e6efd6">accesoRFID::mostrarID</link>()&#32;{
55 &#32;&#32;Serial.print(<emphasis role="stringliteral">&quot;UID&#32;de&#32;la&#32;llave:&#32;&quot;</emphasis>);
56 
57 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;rdif.uid.size;&#32;++i)&#32;{
58 &#32;&#32;&#32;&#32;Serial.print(rdif.uid.uidByte[i]&#32;&lt;&#32;0x10&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;0&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>);
59 &#32;&#32;&#32;&#32;Serial.print(rdif.uid.uidByte[i],&#32;HEX);
60 &#32;&#32;}
61 
62 &#32;&#32;Serial.println();
63 
64 }
70 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classaccesoRFID_1a796d502e70c965524f20c277278e2fc8">accesoRFID::detectarTarjeta</link>()&#32;{
71 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!rdif.<link linkend="_classMFRC522_1a3adca9d3b455c680ebcde3b74c4e567b">PICC_IsNewCardPresent</link>())&#32;{
72 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
73 &#32;&#32;}
74 
75 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!rdif.<link linkend="_classMFRC522_1aab1218c71cec9cc17ee3ac8a683df106">PICC_ReadCardSerial</link>())&#32;{
76 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
77 &#32;&#32;}
78 
79 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
80 
81 }
</programlisting></section>
